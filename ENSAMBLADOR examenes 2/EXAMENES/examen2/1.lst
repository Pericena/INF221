     1                                  
     2                                  ;%%%%%%%%%%%%%%%%%%%%%%%
     3                                  ;assemble and link with 
     4                                  ;nasm -f win32 -o ejemplo.o ejemplo.asm
     5                                  ;gcc -o ejemplo.exe ejemplo.o
     6                                  ;%%%%%%%%%%%%%%%%%%%%%%%
     7                                  ;---------------------------------------
     8                                  
     9                                  ;file: hola.asm
    10                                  
    11                                  extern _printf, _scanf		
    12                                  
    13                                  segment .data
    14 00000000 0A456C2076616C6F72-     msj1 db 10,"El valor de a es:%d",0,10
    15 00000009 20646520612065733A-
    16 00000012 2564000A           
    17 00000016 0A456C2076616C6F72-     msj2 db 10,"El valor de b es:%d",0,10
    18 0000001F 20646520622065733A-
    19 00000028 2564000A           
    20 0000002C 0A456C2076616C6F72-     msj3 db 10,"El valor de c es:%d",0,10
    21 00000035 20646520632065733A-
    22 0000003E 2564000A           
    23 00000042 0A456C2076616C6F72-     msj4 db 10,"El valor de d es:%d",0,10
    24 0000004B 20646520642065733A-
    25 00000054 2564000A           
    26 00000058 0A456C2076616C6F72-     msj5 db 10,"El valor de la expresion es:%d",0,10
    27 00000061 206465206C61206578-
    28 0000006A 70726573696F6E2065-
    29 00000073 733A2564000A       
    30 00000079 07                      	a db 7
    31 0000007A 09                      	b db 9
    32 0000007B 0D                      	c db 13
    33 0000007C 05                      	d db 5
    34                                  segment .bss
    35 00000000 <res 00000004>          	x resd 1
    36                                  segment .text 
    37                                  global _main 					
    38                                  _main:
    39                                  ;---------------------------------------	
    40                                  ;-----------llenando la pila
    41 00000000 31C0                    	xor eax,eax
    42                                  	;----1 dato
    43 00000002 A0[79000000]            	mov al,[a]
    44 00000007 50                      	push eax
    45 00000008 68[00000000]            	push msj1
    46 0000000D E8(00000000)            	call _printf
    47 00000012 83C408                  	add esp , 8
    48                                  	;----2 dato
    49 00000015 A0[7A000000]            	mov al,[b]
    50 0000001A 50                      	push eax
    51 0000001B 68[16000000]            	push msj2
    52 00000020 E8(00000000)            	call _printf
    53                                  	;
    54 00000025 A0[7B000000]            	mov al,[c]
    55 0000002A 50                      	push eax
    56 0000002B 68[2C000000]            	push msj3
    57 00000030 E8(00000000)            	call _printf
    58                                  	;
    59 00000035 A0[7C000000]            	mov al,[d]
    60 0000003A 50                      	push eax
    61 0000003B 68[42000000]            	push msj4
    62 00000040 E8(00000000)            	call _printf
    63                                  ;--------------- programa ------------------------
    64 00000045 31C0                    	xor eax,eax
    65 00000047 31C9                    	xor ecx,ecx
    66 00000049 A0[7B000000]            	mov al,[c]
    67 0000004E 2A05[7C000000]          	sub al,[d]
    68 00000054 B319                    	mov bl,25
    69 00000056 F6E3                    	mul bl
    70 00000058 31C9                    	xor ecx,ecx	
    71 0000005A 31DB                    	xor ebx,ebx	
    72 0000005C 6689C1                  	mov cx,ax 	;25(c-d)
    73 0000005F A0[7A000000]            	mov al,[b]
    74 00000064 B303                    	mov bl,3
    75 00000066 F6E3                    	mul bl		;3b
    76 00000068 31D2                    	xor edx,edx	
    77 0000006A 2A05[79000000]          	sub al,[a]
    78 00000070 6629C1                  	sub cx,ax 
    79                                  	
    80 00000073 51                      	push ecx 
    81 00000074 68[58000000]            	push msj5
    82 00000079 E8(00000000)            	call _printf
    83 0000007E 83C408                  	add esp , 8
    84 00000081 C3                      ret
    85                                  ;..........subrutina....................	
    86                                  
    87                                  
    88                                  
    89                                  
