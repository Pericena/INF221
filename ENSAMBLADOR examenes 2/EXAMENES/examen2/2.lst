     1                                  
     2                                  ;%%%%%%%%%%%%%%%%%%%%%%%
     3                                  ;assemble and link with 
     4                                  ;nasm -f win32 -o ejemplo.o ejemplo.asm
     5                                  ;gcc -o ejemplo.exe ejemplo.o
     6                                  ;%%%%%%%%%%%%%%%%%%%%%%%
     7                                  ;---------------------------------------
     8                                  
     9                                  ;file: hola.asm
    10                                  
    11                                  extern _printf, _scanf		
    12                                  
    13                                  segment .data
    14 00000000 0A456C2076616C6F72-     	msj1 db 10,"El valor de a es:%d",0,10
    15 00000009 20646520612065733A-
    16 00000012 2564000A           
    17 00000016 0A456C2076616C6F72-     	msj2 db 10,"El valor de b es:%d",0,10
    18 0000001F 20646520622065733A-
    19 00000028 2564000A           
    20 0000002C 0A456C2076616C6F72-     	msj3 db 10,"El valor de c es:%d",0,10
    21 00000035 20646520632065733A-
    22 0000003E 2564000A           
    23 00000042 0A456C2076616C6F72-     	msj4 db 10,"El valor de d es:%d",0,10
    24 0000004B 20646520642065733A-
    25 00000054 2564000A           
    26 00000058 0A456C20726573756C-     	msj5 db 10,"El resultado es:%d",0,10	
    27 00000061 7461646F2065733A25-
    28 0000006A 64000A             
    29 0000006D 05                      	a db 5
    30 0000006E 06                      	b db 6
    31 0000006F 03                      	c db 3
    32 00000070 08                      	d db 8	
    33                                  segment .bss
    34                                  
    35                                  segment .text 
    36                                  global _main 					
    37                                  _main:
    38                                  ;---------------------------------------	
    39                                  ;resultado en edx
    40 00000000 31C0                    	xor eax,eax
    41 00000002 A0[6D000000]            	mov al,[a]
    42 00000007 50                      	push eax
    43 00000008 68[00000000]            	push msj1
    44 0000000D E8(00000000)            	call _printf
    45 00000012 83C408                  	add esp,8
    46                                  	
    47 00000015 A0[6E000000]            	mov al,[b]
    48 0000001A 50                      	push eax
    49 0000001B 68[16000000]            	push msj2
    50 00000020 E8(00000000)            	call _printf
    51 00000025 83C408                  	add esp,8
    52                                  	
    53 00000028 31C0                    	xor eax,eax
    54 0000002A A0[6F000000]            	mov al,[c]
    55 0000002F 50                      	push eax
    56 00000030 68[2C000000]            	push msj3
    57 00000035 E8(00000000)            	call _printf
    58 0000003A 83C408                  	add esp,8
    59                                  	
    60 0000003D A0[70000000]            	mov al,[d]
    61 00000042 50                      	push eax
    62 00000043 68[42000000]            	push msj4
    63 00000048 E8(00000000)            	call _printf
    64 0000004D 83C408                  	add esp,8	
    65                                  ;------programa
    66 00000050 31C0                    		xor eax,eax
    67 00000052 31C9                    		xor ecx,ecx	
    68 00000054 31DB                    		xor ebx,ebx		
    69 00000056 31D2                    		xor edx,edx			
    70 00000058 8A1D[6F000000]          		mov bl,[c]
    71 0000005E A0[70000000]            		mov al,[d]
    72 00000063 F6E3                    		mul bl
    73 00000065 6689C1                  		mov cx,ax	;cx =(c*d)
    74 00000068 8A15[6E000000]          		mov dl,[b]
    75 0000006E 28DA                    		sub dl,bl	;dl =(b-c)
    76 00000070 0215[6D000000]          		add dl,[a]	;dl =(dl+a)
    77 00000076 6689D0                  		mov ax,dx
    78 00000079 F6F1                    		div cl
    79 0000007B 6698                    		cbw
    80                                  		
    81 0000007D 50                      		push eax
    82 0000007E 68[58000000]            		push msj5
    83 00000083 E8(00000000)            		call _printf
    84 00000088 83C408                  		add esp,8
    85 0000008B C3                      ret
    86                                  ;---------------------------------------
    87                                  ;..........subrutina....................	
    88                                  
    89                                  
    90                                  
    91                                  
